[ソフトウェア名] InstantTextInserter
[  バージョン  ] 0.2.1
[    作者名    ] shouh
[   取扱種別   ] フリーウェア
[   動作環境   ] Windows7(32bit, 64bit)

■概要
定型文貼り付けソフトウェアです。
短縮語と定型文の組を登録しておくと、
短縮語を入力するだけで定型文が貼り付けられます。

メールアドレス、住所や郵便番号、プログラムコードなど
お決まりの文章を登録しておくと、素早く入力できて便利です。

類似ソフトとの違い
- 余計な機能や設定を省いてなるべくシンプルにしてある
- 定型文データはただのテキストファイルのため, 編集や管理が容易

■インストール
ダウンロードした圧縮ファイルを適当なフォルダ内で解凍します。

■バージョンアップ
新しいバージョンのものを使用する場合、
手動で iti.exe と python27.dll を上書きしてから使用してください。

■アンインストール
インストールフォルダごと削除します。
インストールフォルダ以外のフォルダやレジストリは使用していません。

■使い方
スニペット(短縮語と定型文の組)を登録した後に
実行ファイルを起動するだけです。

スニペットに関する詳細は以降で説明します。

スニペット編集後、プログラムに反映させるためにはリロードが必要です。
タスクトレイアイコンの右クリックメニュー、左クリック、ホットキー
などから行えます。

■とりあえずどんな感じなのか触ってみたい場合
既にスニペットをいくつか登録していますので、試用してみましょう。

実行ファイルを起動した後、メモ帳などテキストエディタを開き、
'yr  ' と入力(末尾はスペース二つ)してみてください。
「よろしくお願い致します。」という定型文が入力されると思います。

今度は 'a^^' と入力してみましょう。
「<a href=""></a>」が入力されると思います。
ここで注目していただきたいのは、キャレット(カーソル)の位置です。

   <a href="">|</a>
              ^
              ここ

ここに来ていると思います。
定型文を単に入力するだけでなく、
入力後のカーソル位置を決めることもできるのです。

■スニペットの登録方法
まずはじめに、便宜のためいくつか用語を定義します。

  [用語]
  短縮語      : 定型文を貼り付けるために入力する文字列
  定型文      : 実際に貼り付ける文字列
  スニペット  : 短縮語と定型文の組

スニペットを登録するには snippet フォルダ直下に
テキストファイル(スニペットファイル)を作ります。
※ファイルの文字コードは Shift-Jis のみ使用可です
  他の文字コードを使うと文字化けが発生します

スニペットファイルの名前は何でも構いません。
また、スニペットファイルは複数個作ることができます。
一つのファイルに全てのスニペットを書いてもよいですし、
定型文の種類に応じて複数のファイルを作ってもよいと思います。

■スニペットファイルの書き方
以下のように記述します。
(※先頭のタブ文字は見易さのために入れてるだけなので不要です)

	===短縮語1===
	定型文1
	===短縮語2===
	定型文2
	…

'=' は一つ以上であれば何個でも構いません。
たとえば以下のような書き方もできます。

	=短縮語1=
	定型文1
	========短縮語2========
	定型文2
	…

短縮語として使用できる文字は以下のとおりです。
・0-9
・a-z
・タブ
・スペース
・記号(-^\@[;:],.\ など)

定型文中ではマクロ(% で囲まれた特殊な文字列)を使うことができます。
以下のマクロがサポートされています。

	%cursor% : 定型文貼付後, カーソルをこの位置に移動させる
	%equal%  : '=' が展開される(定型文行頭に '=' を入れたい場合に使う)
	%yyyy%   : 現在の年(4ケタ)
	%yy%     : 現在の年(2ケタ)
	%momo%   : 現在の月(2ケタ)
	%dd%     : 現在の日(2ケタ)
	%yj%     : 現在の曜日(日本語)
	%ye%     : 現在の曜日(英語、先頭三文字)
	%hh%     : 現在の時(2ケタ)
	%momo%   : 現在の分(2ケタ)
	%dd%     : 現在の秒(2ケタ)

■ホットキーについて
本ソフトウェアに関する操作のいくつかは、
ホットキーで呼び出すことができます。

ホットキーの設定は hotkey.ini を編集することで行います。
編集後、プログラムに反映させるためにはリロードが
必要なことに注意してください。

書き方についててっとり早く知りたい方は hotkey.ini を参照してください。
使い方をコメント付きでひと通り書いています。

以下、書き方をひと通り解説していきます。

■■hotkey.iniの書き方
一行毎に以下の形式で記述します。

	(設定項目),(割り当てる修飾キー),(割り当てるキー),(その他パラメータ)

以下のようにコメントを書くこともできます。

	;この行は無視されます。
	;注釈やメモを書いておくのに便利でしょう。

以下、各要素について説明します。

■■(設定項目)
ここにはあらかじめ決まった文字列を指定します。
たとえば「reload」と書くと、設定を再読込する働きになります。

以下は、設定項目の一覧です。

reload              ホットキー設定とスニペット設定をリロード(再読込)する.
open_snippet_folder スニペットファイルのあるフォルダを開く.
open_hotkey_config  本ファイルを開く.
open                指定したファイルを開く.
version             バージョン情報を表示する.
quit                本ソフトウェアを終了する.

openについては少し詳しく説明します。
以下のように書きます。

	open, <修飾キー>, <文字キー>, <プログラムパス>, <引数>

<プログラムパス> に、開きたいファイルを指定します。
絶対パスか、実行ファイルを基点とした相対パスを指定できます。

<引数> には「<プログラムパス> にて渡したプログラム」に渡す引数を指定します。
<引数> は省略しても構いません。

■■(割り当てる修飾キー),(割り当てるキー)
割り当てる修飾キーとして使えるのは

	c, s, a, w

この四つの文字です。
これを組み合わせて指定します。

たとえば Ctrl + Shift を設定したいなら

	cs

または

	sc

と書きます。

続いて、割り当てるキーとして使えるのは以下のとおりです。

	a-z
	0-9(メインキー)
	n0-n9(テンキー)
	F1-F24
	backspace
	tab
	enter
	pause
	capslock
	escape
	convert
	nonconvert
	space
	pageup
	pagedown
	end
	home
	left
	right
	up
	down
	printscreen
	insert
	delete

さて、ここまでを踏まえて、いくつか例を書きます。

	;Ctrl + Shift + S を押すと、
	;スニペットファイルのあるフォルダを開く。
	open_snippet_folder, cs, s

	;Ctrl + Alt + Enter を押すと、
	; ホットキー設定とスニペット設定を再読込する。
	reload, ac, enter

hotkey.ini の編集を終えた後は、リロードを行う必要があります。
トレイアイコンの右クリックメニュー or ホットキーから行えます。
リロードの際、設定の書き方がおかしかったり、
既に登録されていて登録できなかったりした場合はエラーとなり、
その設定は無視されます。

■Q&A
Q:短縮語を上手く登録するコツはありますか？
A:記号を使って誤入力を防ぐのがコツだと思います。
  たとえば「いつもお世話になっております」を登録したい場合、
  短縮語は it などが考えられますが、これだと
  行ってきますと入力した場合でも
  ittekimasu
  ~~
  この時点で貼り付けられてしまいます。
  これを防ぐために、たとえば以下のように末尾に記号を入れてやります。

  「it@」   末尾に '@' を入れた
  「it^ 」  末尾に '^ ' を入れた

  個人的なオススメはスペースやタブを入れることです。

Q:クリップボードの中身が勝手に書き換わっているのですが……？
A:本ソフトウェアは定型文貼付け時にクリップボードを使用しています。
  したがって既にクリップボードにあった内容は
  なくなってしまいます。ご了承ください。

Q:日本語入力中に定型文を挿入しようとすると
  文字が余分に消去されてしまいます。どうすれば防げますか？
A:「日本語入力でも直接入力でも入力文字数が変わらない」短縮語を使います。

  例: 短縮語が 'asu@', 定型文が 'また明日' の場合
  定型文貼り付け時、本ソフトウェアは4文字分('asu@'の4文字)の文字を消去します。
  直接入力モードだとこれが上手く働きますが、日本語入力中だとそうはいきません。
  日本語入力だと 'あす@' となっており3文字となるために、
  余分に1文字分消去されるからです。

  これを防ぐために、たとえば短縮語を 'as@' にします。

■転載, 配布
メールにてご相談ください。
なお、ウェブサイトでの本ソフトウェアの紹介は自由です。

■注意事項
本ソフトウェアを使用あるいは使用できなかったことによって
生じた損害について、作者は責任を負いません。

本ソフトウェアの仕様、名称、公開形態及び本テキストファイルの内容は
予告無く変更されることがあります。

全ての書き込みやメールに対して作者が対応するとは限りませんので
ご了承ください。

■連絡先
メールアドレス
  shouhpublicATTOgmailDOTTOcom
  ※大文字部分を記号に変換してください

ウェブサイト
  http://shouh.github.io/software_details.html
  https://github.com/shouh/InstantTextInserter (ソースコード)

■更新履歴
16/??/?? v0.2.1 バグ修正
・修飾キー(Shiftキー等)押下時に誤ってマッチしていたのを修正

  詳しい説明
  たとえば短縮形を「 ;」(スペースとセミコロンです)とした場合、
  1. スペースを入力
  2. Shift + ; で「+」を入力
  この手順を踏んだ場合にも上記短縮形がマッチしていました。
  本修正では、この手順ではマッチしないようにしました。

16/02/12 v0.2.0 機能追加, 機能改善
・本プログラムを終了するホットキー 'quit' を追加
・複数の短縮語にマッチした際に最長マッチで選択するようにした

  詳しい説明
  (例)
    短縮語    定型文
    a-        'a-'の定型文です
    ba-       'ba-'の定型文です
  この状態で ba- を入力すると、どちらの定型文が採用されるかは不定でした。
  これを「'ba-'の定型文です」の定型文が採用されるように変更しました。
  # ba- と入力した時、a- も ba- も当てはまりますが
  # 最長マッチにより文字数の長い ba- を採用します
・enter キーを内部的に省略形対象文字として扱うようにした
  # 今までは space enter space は space space とみなされていたため
  # 末尾に space space を含む定型文が意図せずマッチすることがありましたが、
  # 本修正によりこれを防止しました。

15/08/24 v0.1.0 機能追加
・指定したファイルをホットキーにて開けるようにした
・readme.txt及び同梱のhotkey.iniをわかりやすく加筆修正

15/05/14 v0.0.7 機能削除
・定型文挿入時に元々のクリップボード内容を復旧する機能を削除
  (復旧の成功率が不安定であるため)

15/04/28 v0.0.6 バグ修正
・クリップボード内容復旧周りの動作が安定しないのを、多少安定化

15/04/19 v0.0.5 仕様変更
・定型文挿入時、元々のクリップボード内容を復旧するようにした

14/09/21 v0.0.4 機能追加
・現在日付や現在時刻に展開されるマクロを追加

14/09/21 v0.0.3 バグ修正
・hotkey.iniのコメントアウトがコメントアウトとして扱われてなかった不具合を修正
・対応する文字コードを Shift-Jis のみに限定
・環境によっては応答を受け付けなくなることがあった不具合を修正
  (文字コード関係の変換処理にしくじりメインスレッドが異常終了していた)
・%cursor% の位置が正しく計算されないことがあった不具合を修正

14/03/09 v0.0.2 機能追加と性能改善
・ホットキー機能を追加
・CPU使用率を抑制

13/01/06 v0.0.1
・とりあえず公開
